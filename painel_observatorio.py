import streamlit as st
import pandas as pd
import plotly.express as px

# --- CONFIGURA√á√ÉO DA P√ÅGINA ---
st.set_page_config(
    page_title="Observat√≥rio da Viol√™ncia Contra a Mulher - SC",
    page_icon="üíú",
    layout="wide"
)

# --- FUN√á√ïES PARA CARREGAR OS DADOS DOS ARQUIVOS EXCEL ---
# ATEN√á√ÉO: A mudan√ßa est√° aqui! Trocamos pd.read_csv por pd.read_excel

@st.cache_data
def carregar_dados_gerais():
    """
    Carrega e trata os dados da base geral a partir do arquivo Excel.
    """
    try:
        df = pd.read_excel('data/base_geral.xlsx') # Certifique-se que o nome do arquivo est√° correto

        # Renomeia as colunas usando os nomes da imagem para os nomes padr√£o do c√≥digo
        df.rename(columns={
            'Data do Fato': 'data_fato',
            'Munic√≠pio': 'municipio',
            'Mesoregi√£o': 'mesoregiao',
            'Fato Comunicado': 'fato_comunicado',
            'Idade': 'idade_vitima'  # Renomeando 'Idade' para 'idade_vitima' para ser mais espec√≠fico
        }, inplace=True)

        # --- Tratamento de Dados Essencial ---
        # Agora usamos a nova coluna 'data_fato' que acabamos de renomear
        df['data_fato'] = pd.to_datetime(df['data_fato'])
        df['ano'] = df['data_fato'].dt.year
        df['mes'] = df['data_fato'].dt.month_name()
        
        return df
        
    except FileNotFoundError:
        st.error("Arquivo 'base_geral.xlsx' n√£o encontrado na pasta 'data'. Verifique o nome do arquivo.")
        return pd.DataFrame()
    except KeyError as e:
        st.error(f"Erro de Chave (KeyError): A coluna {e} n√£o foi encontrada. "
                 "Isso pode acontecer se o cabe√ßalho no arquivo Excel mudou. "
                 "Verifique se as colunas 'Data do Fato', 'Munic√≠pio', etc., existem no arquivo.")
        return pd.DataFrame()
    
@st.cache_data
def carregar_dados_feminicidio():
    """
    Carrega e trata os dados da base de feminic√≠dio a partir do arquivo Excel.
    """
    try:
        df = pd.read_excel('data/base_feminicidio.xlsx') # Certifique-se que o nome do arquivo est√° correto

        # Renomeia as colunas usando os nomes da imagem para os nomes padr√£o do c√≥digo
        df.rename(columns={
            'DATA': 'data_fato',
            'MUNIC√çPIO': 'municipio',
            'RELA√á√ÉO COM O AUTOR': 'relacao_autor',
            'IDADE AUTOR': 'idade_autor',
            'PRIS√ÉO': 'autor_preso',
            'IDADE VITIMA': 'idade_vitima',
            'MEIO': 'meio_crime'
            # Adicione outras colunas que voc√™ for usar aqui, se necess√°rio
        }, inplace=True)

        # --- Tratamento de Dados Essencial ---
        df['data_fato'] = pd.to_datetime(df['data_fato'])
        df['ano'] = df['data_fato'].dt.year
        
        return df

    except FileNotFoundError:
        st.error("Arquivo 'base_feminicidio.xlsx' n√£o encontrado na pasta 'data'. Verifique o nome do arquivo.")
        return pd.DataFrame()
    except KeyError as e:
        st.error(f"Erro de Chave (KeyError) no arquivo de feminic√≠dio: A coluna {e} n√£o foi encontrada. "
                 "Verifique se o cabe√ßalho no arquivo Excel corresponde ao esperado.")
        return pd.DataFrame()

# Carregar os dados
df_geral = carregar_dados_gerais()
df_feminicidio = carregar_dados_feminicidio()


# --- BARRA LATERAL (SIDEBAR) E O RESTO DA APLICA√á√ÉO ---
# O restante do seu c√≥digo continua exatamente o mesmo.
st.sidebar.image("https://i.imgur.com/805nJ3j.png", width=80)
st.sidebar.title("Observat√≥rio da Viol√™ncia Contra a Mulher")

# Verifica√ß√£o para evitar erros se os arquivos n√£o forem carregados
if not df_geral.empty and not df_feminicidio.empty:
    st.sidebar.header("Filtros")
    
    # Filtro de Ano
    anos_disponiveis = sorted(df_geral['ano'].unique())
    ano_selecionado = st.sidebar.multiselect(
        "Selecione o Ano",
        options=anos_disponiveis,
        default=anos_disponiveis
    )

    # Filtro de Tipo de Crime
    # Usar 'fato_comunicado' (o nome renomeado), e n√£o 'Fato Comunicado'
    fatos_disponiveis = sorted(df_geral['fato_comunicado'].unique()) 
    fato_selecionado = st.sidebar.multiselect(
        "Selecione o Tipo de Crime",
        options=fatos_disponiveis,
        default=fatos_disponiveis
    )

# Aplicar filtros aos dataframes
df_geral_filtrado = df_geral[
    (df_geral['ano'].isin(ano_selecionado)) &
    (df_geral['fato_comunicado'].isin(fato_selecionado))
]

df_feminicidio_filtrado = df_feminicidio[
    df_feminicidio['ano'].isin(ano_selecionado)
]


# --- ESTRUTURA COM ABAS (TABS) ---
tab_geral, tab_feminicidio, tab_glossario = st.tabs([
    "üìä An√°lise Geral da Viol√™ncia", 
    "üö® An√°lise de Feminic√≠dios",
    "üìñ Metodologia e Gloss√°rio"
])


# --- ABA 1: AN√ÅLISE GERAL ---
with tab_geral:
    st.header("Viol√™ncia Contra a Mulher em Santa Catarina")
    st.markdown("Vis√£o geral dos registros de ocorr√™ncias.")

    # KPIs (Indicadores Chave de Performance)
    total_registros = df_geral_filtrado.shape[0]
    media_idade_vitima = df_geral_filtrado['idade_vitima'].mean()
    
    # Organizar KPIs em colunas
    col1, col2 = st.columns(2)
    with col1:
        st.metric(label="Total de Registros de Crime", value=f"{total_registros:,}".replace(",", "."))
    with col2:
        st.metric(label="Idade M√©dia da V√≠tima", value=f"{media_idade_vitima:.1f} anos")
    
    st.markdown("---")

    # Gr√°ficos em duas colunas
    col_graf1, col_graf2 = st.columns(2)

    with col_graf1:
        # Gr√°fico 1: Quantidade de registros por ano
        st.subheader("Registros de Ocorr√™ncias por Ano")
        registros_por_ano = df_geral_filtrado['ano'].value_counts().sort_index()
        fig_ano = px.bar(
            registros_por_ano,
            x=registros_por_ano.index,
            y=registros_por_ano.values,
            labels={'x': 'Ano', 'y': 'Quantidade de Registros'},
            template='plotly_white',
            text=registros_por_ano.values
        )
        fig_ano.update_traces(marker_color='#8A2BE2', textposition='outside')
        st.plotly_chart(fig_ano, use_container_width=True)

    with col_graf2:
        # Gr√°fico 2: Quantidade de registros por tipo de crime
        st.subheader("Tipos de Crimes Mais Frequentes")
        registros_por_fato = df_geral_filtrado['fato_comunicado'].value_counts()
        fig_fato = px.bar(
            registros_por_fato,
            x=registros_por_fato.values,
            y=registros_por_fato.index,
            orientation='h',
            labels={'x': 'Quantidade de Registros', 'y': 'Tipo de Crime'},
            template='plotly_white',
            text=registros_por_fato.values
        )
        fig_fato.update_traces(marker_color='#9370DB', textposition='auto')
        fig_fato.update_layout(yaxis={'categoryorder':'total ascending'})
        st.plotly_chart(fig_fato, use_container_width=True)


# --- ABA 2: AN√ÅLISE DE FEMINIC√çDIOS ---
with tab_feminicidio:
    st.header("An√°lise de Feminic√≠dios Consumados")
    st.markdown("Indicadores espec√≠ficos sobre os crimes de feminic√≠dio no estado.")
    
    # KPIs
    total_feminicidios = df_feminicidio_filtrado.shape[0]
    idade_media_vitima_fem = df_feminicidio_filtrado['idade_vitima'].mean()
    idade_media_autor_fem = df_feminicidio_filtrado['idade_autor'].mean()

    col1, col2, col3 = st.columns(3)
    with col1:
        st.metric(label="Total de Feminic√≠dios", value=total_feminicidios)
    with col2:
        st.metric(label="Idade M√©dia da V√≠tima", value=f"{idade_media_vitima_fem:.1f} anos")
    with col3:
        st.metric(label="Idade M√©dia do Autor", value=f"{idade_media_autor_fem:.1f} anos")
        
    st.markdown("---")
    
    # Gr√°ficos em duas colunas
    col_graf_fem1, col_graf_fem2 = st.columns(2)
    
    with col_graf_fem1:
        # Gr√°fico 3: V√≠nculo entre v√≠tima e autor
        st.subheader("V√≠nculo entre a V√≠tima e o Autor")
        vinculo_autor = df_feminicidio_filtrado['relacao_autor'].value_counts()
        fig_vinculo = px.pie(
            values=vinculo_autor.values,
            names=vinculo_autor.index,
            hole=.4, # Para criar um gr√°fico de rosca (donut)
            color_discrete_sequence=px.colors.sequential.Purples_r
        )
        st.plotly_chart(fig_vinculo, use_container_width=True)
        
    with col_graf_fem2:
        # Gr√°fico 4: Meio utilizado no crime
        st.subheader("Meio Utilizado para o Crime")
        meio_crime = df_feminicidio_filtrado['meio_crime'].value_counts()
        fig_meio = px.bar(
            meio_crime,
            x=meio_crime.index,
            y=meio_crime.values,
            labels={'x': 'Meio Utilizado', 'y': 'Quantidade'},
            template='plotly_white',
            text=meio_crime.values
        )
        fig_meio.update_traces(marker_color='#8A2BE2', textposition='outside')
        st.plotly_chart(fig_meio, use_container_width=True)

# --- ABA 3: GLOSS√ÅRIO ---
with tab_glossario:
    st.header("Metodologia e Gloss√°rio")
    
    st.subheader("Metodologia")
    st.markdown("""
    Os dados que constam neste painel foram fornecidos pela Ger√™ncia de Estat√≠stica e An√°lise Criminal da Secretaria de Estado da Seguran√ßa P√∫blica - GEAC | DINE | SSP | SC.
    
    Eles foram organizados e processados para possibilitar clareza no entendimento das informa√ß√µes e permitir a intera√ß√£o dos usu√°rios.
    
    A elabora√ß√£o do painel √© uma parceria entre o Observat√≥rio da Viol√™ncia Contra a Mulher (OVM/SC) e o Minist√©rio P√∫blico de Contas de Santa Catarina (MPC/SC).
    """)
    
    st.subheader("Gloss√°rio de Tipos de Crimes")
    st.markdown("""
    - **Amea√ßa:** Amea√ßar algu√©m, por palavra, escrito ou gesto, ou qualquer outro meio simb√≥lico, de causar-lhe mal injusto e grave.
    - **Les√£o Corporal Dolosa:** A les√£o corporal caracteriza-se por ofender a integridade corporal ou a sa√∫de de outrem. O crime doloso ocorre quando o agente quis o resultado ou assumiu o risco de produzi-lo.
    - **Estupro:** Constranger algu√©m, mediante viol√™ncia ou grave amea√ßa, a ter conjun√ß√£o carnal ou a praticar ou permitir que com ele se pratique outro ato libidinoso.
    - **Feminic√≠dio:** Homic√≠dio contra a mulher por raz√µes da condi√ß√£o de sexo feminino. Considera-se que h√° raz√µes de condi√ß√£o de sexo feminino quando o crime envolve: viol√™ncia dom√©stica e familiar ou menosprezo ou discrimina√ß√£o √† condi√ß√£o de mulher.
    - **Vias de fato:** S√£o atos agressivos praticados contra algu√©m, que n√£o cheguem a causar les√£o corporal. Exemplos: empurrar, sacudir, puxar cabelo, etc.
    """)
    st.markdown("---")
    st.info("Fonte: C√≥digo Penal Brasileiro, Lei do Feminic√≠dio (Lei n¬∫ 13.104/2015), Lei Maria da Penha (Lei n¬∫ 11.340/2.006).")
